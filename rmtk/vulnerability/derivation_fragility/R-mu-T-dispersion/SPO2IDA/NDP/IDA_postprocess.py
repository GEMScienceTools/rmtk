# -*- coding: utf-8 -*-
"""
Created on Fri Jan 16 10:42:52 2015

@author: chiaracasotto
"""
from rmtk.vulnerability.common.mle import mle
import scipy.stats as stat
import numpy as np

def IDA_postprocess(IM, EDP, limits, bUthd, rec_data, g):
    Pex = []
    [Nstripe,Nrec] = rec_data;
    for i in range(0,len(limits)):
        for edp in EDP:
            if bUthd[i]>0:
                allPex = stat.norm(np.log(limits[i]),bUthd[i]).cdf(np.log(edp))
                Pex.append(allPex.sum()/Nrec)
            else:
                Pex.append(np.divide(float(len(edp[np.log(edp)>np.log(limits[i])])),float(Nrec)))
                
    Pex = np.array(Pex)
    Pex = Pex.reshape((len(limits),Nstripe))
    
    # <codecell>
    
    log_meanSa, log_stSa = [], []
    for i in range(0,len(Pex)):
        data = Pex[i]*Nrec
        [mu, sigma] = mle(data.astype(int), IM, Nrec,g)
        log_meanSa.append(mu)
        log_stSa.append(sigma)
        print np.exp(mu), sigma
        
    print 'medians=', [np.exp(ele) for ele in log_meanSa]
    print 'total dispersion=', log_stSa
    return [log_meanSa, log_stSa, Pex]