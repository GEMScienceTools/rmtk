# -*- coding: utf-8 -*-
"""
Created on Wed Dec 17 15:20:10 2014

@author: chiaracasotto
"""
# Clear existing variables
def clearall():
    all = [var for var in globals() if var[0] != "_"]
    for var in all:
        del globals()[var]
clearall()
from rmtk.vulnerability.NDP.read_IDA import read_IDA
from rmtk.vulnerability.NDP.IDA_postprocess import IDA_postprocess
import numpy as np
import scipy.stats as stat
import matplotlib.pyplot as plt

import os 
cd = os.getcwd()

# <codecell>

vuln = 0
g = 1
plotflag = [1, 1]
iml = np.linspace(0.1, 2, 100)
IMlabel = ['m/s$^{2}$']
linew = 2
fontsize = 14
plot_feature = [plotflag, linew, fontsize, IMlabel, iml]

[IM, EDP, limits, bUthd, rec_data] = read_IDA()

# <codecell>

[log_meanSa, log_stSa, Pex] = IDA_postprocess(IM, EDP, limits, bUthd, rec_data, g)

# <codecell>

colours = ['b','r','g','k','c','y']
for q in range(0,len(log_meanSa)):
    damage = Pex[q]
    txt = 'Damage State '+str(q+1)
    plt.plot(IM,damage,marker='o',color=colours[q], linestyle='None',label=txt)
    y = stat.norm(log_meanSa[q],log_stSa[q]).cdf(np.log(IM))
    plt.plot(IM,y,color=colours[q],linewidth=linew,label = txt)
      
plt.xlabel('Spectral acceleration at T elastic, Sa(Tel) '+IMlabel[0],fontsize = fontsize)
plt.ylabel('Probabilty of Exceedance',fontsize = fontsize)
plt.suptitle('Fragility Curves',fontsize = fontsize)
plt.legend(loc='lower right',frameon = False)
plt.savefig(cd+'/outputs/fragility_curves.png')
plt.show()
