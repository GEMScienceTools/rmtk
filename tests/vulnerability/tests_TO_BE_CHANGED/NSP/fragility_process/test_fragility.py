# -*- coding: utf-8 -*-
"""
Created on Fri Jan 23 11:24:59 2015

@author: chiaracasotto
"""

# Clear existing variables
def clearall():
    all = [var for var in globals() if var[0] != "_"]
    for var in all:
        del globals()[var]
clearall()

# Import functions
import matplotlib.pyplot as plt
import numpy as np
import os
from rmtk.vulnerability.NSP.get_data import read_data
from rmtk.vulnerability.NSP.fragility_process import fragility_process
from rmtk.vulnerability.common.conversions import from_mean_to_median
import pandas as pd

pi = 3.141592653589793
plt.close("all")
cd = os.getcwd()

# <codecell>

plotflag = [0, 0, 1, 1]
linew = 2
fontsize = 10
units = ['[m]', '[kN]', '[g]']
vuln = 0
g = 9.81
iml = np.linspace(0.001,3.5,25)
N = 10
MC = 25
Tc = 0.5
Td = 1.8
newData = pd.DataFrame()

# <codecell>

for tipo in np.arange(0,3,1):
    print tipo
    an_type = tipo
    in_type = 1
    idealised = 0
    
    plot_feature = [plotflag, linew, fontsize, units, iml]
    [T, Gamma, w, EDPlim, dcroof, EDPvec, RDvec, SPO, bUthd, noBlg, Tav, Sa_ratios] = read_data(in_type,an_type,idealised,linew,fontsize,units,plotflag[0])
    dispersion = [np.repeat(0.,len(dcroof[0])), np.repeat(0.25,len(dcroof[0]))]
    
    for j in range(0,2):
        bUthd = [dispersion[j]]*noBlg
        [log_meanSa, log_stSa] = fragility_process(an_type, T, Gamma, w, EDPlim, dcroof, EDPvec, RDvec, SPO, bUthd, noBlg, g, MC, Sa_ratios, plot_feature, N, Tc, Td)
        [Sa50, beta] = [np.exp(log_meanSa), log_stSa]    
        print Sa50
        #new = pd.DataFrame({'Sa50':Sa50,'bTSa50':beta})
        newData = pd.concat([newData, pd.DataFrame(Sa50), pd.DataFrame(beta)],axis = 1)
        
# <codecell> 
        
newData.to_csv('outputs/fragility.csv',header=False,index=False)
