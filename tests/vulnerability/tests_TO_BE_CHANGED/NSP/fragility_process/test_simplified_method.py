# -*- coding: utf-8 -*-
# <nbformat>3.0</nbformat>

# <codecell>

"""
Created on Tue May 13 18:04:57 2014

@author: chiaracasotto
"""
# Clear existing variables
def clearall():
    all = [var for var in globals() if var[0] != "_"]
    for var in all:
        del globals()[var]
clearall()

# Import functions
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import os
import csv
from rmtk.vulnerability.NSP.simplified_method import simplified_bilinear

pi = 3.141592653589793
plt.close("all")
cd = os.getcwd()

# <codecell>

MC = 25
g = 9.81

# <codecell>

Gamma = [1.292]
T = [1.612]
Tav = [1.612]
Sa_ratios = 1
SPO =[[0.0951510, 0.940278828, 2093.9]]
dcroof = [[0.046144456, 0.107312842, 0.212491246, 0.473466774, 0.724976013, 0.940278828, 0.940278828]]

EDPlim = [[0.002, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08],dcroof[0]]
with open(cd+'/inputs/EDPvec-RDvec.csv', 'rb') as f:
    reader = csv.reader(f)
    newlist = [row for row in reader]
EDPvec = [np.array([float(ele[0]) for ele in newlist]),[0, 1000]]
RDvec = [np.array([float(ele[1]) for ele in newlist]),[0, 1000]]
noBlg = 1
w = 1
dispersion = [np.repeat(0.,len(dcroof[0])), np.repeat(0.25,len(dcroof[0]))]
g=9.81
MC = 25
data = pd.DataFrame(columns=['Sa50-EdpRd0-beta0','bTSa50-EdpRd0-beta0'],index=np.arange(len(dcroof[0])))


# <codecell>

for k in range(0,len(EDPvec)):
    for j in range(0,len(dispersion)):
        bUthd = [dispersion[j]]*noBlg
        [SaT50, bTSa] = simplified_bilinear(T[0], Gamma[0], EDPlim[k], dcroof[0], EDPvec[k], RDvec[k], SPO[0], bUthd[0], g, MC)
        data['Sa50-EdpRd'+str(k)+'-beta'+str(j)] = pd.DataFrame(SaT50)
        data['bTSa50-EdpRd'+str(k)+'-beta'+str(j)] = pd.DataFrame(bTSa)
        
# <codecell>

data.to_csv('results/RGM_fragility.csv',header=True,index=True)

# <codecell>




