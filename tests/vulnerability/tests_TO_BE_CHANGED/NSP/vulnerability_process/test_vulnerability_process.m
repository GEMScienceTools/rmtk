clc
clear all
close all

%Input data
addpath('./Users/chiaracasotto/Documents/GEM/RMTK/DimitriosFiles/');

Gamma = [1	1	1	1	1];
T = [1.0037	0.77964	0.74098	0.63234	0.48996];
Tav = 0.696;
Sa_ratios = [ 1.6391934   1.22582094  1.11783742  0.92913515  0.72870817];
SPO = [0.099	0.206	0.25	0.25	91.431	91.431	84.659;...
    0.061	0.147	0.29	0.25	63.103	63.103	54.743;...
    0.067	0.130	0.20	0.300	54.735	54.735	45.919;...
    0.065	0.184	0.27	0.27	141.680	141.680	120.290;...
    0.082	0.206	0.3	0.3	111.26	111.26	108.06];
mc = [2.084909223	2.423581556	1.956319743	2.830657081	2.520028965];
a = [0	0	0	0	0];
ac = [0.078258456	0.052634904	0.063318462	0.084335985	0.024990005];
r = [0.925933217	0.867518185	0.838933041	0.849025974	0.94];
mf = [3.031347296	4.940577053	4.500079544	4.620806632	3.670947477];
Tc = 0.5;
Td = 1.8;

dlim	= [0.002, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08];
bUthd	= 0.25;
vecs = csvread('../fragility_process/inputs/EDPvec-RDvec.csv');
EDPvec = vecs(:,1);
RDvec = vecs(:,2);

noBlg = 5;
w = [0.1 0.2 0.3 0.3 0.1];
g = 9.81;
MC = 50;
iml = linspace(0.1,2,50);
xp=linspace( 1./(2*MC),1-1./(2*MC), MC);

for blg = 1:noBlg
    dry = SPO(blg,1);
    du = SPO(blg,4);
    EDPsample = zeros(1,MC);
    for i = 1:length(dlim)
        if bUthd == 0
            [mc,a,ac,r,mf] = get_spo2ida_parameters(SPO(blg,:), T(blg), Gamma(blg));
            [SaT50,bTSa]=DFfragility(dry,dlim(i),bUthd,mc,r,du,T(blg),Gamma(blg),EDPvec,RDvec,Tc,Td,g,MC);    
            Sa_av = log(SaT50)*Sa_ratios(blg);bSa_av=bTSa*Sa_ratios(blg);
            Sa50 = ones(1,MC)*exp(Sa_av);
            bSa = ones(1,MC)*bSa_av;     
        else
            for j=1:MC
                EDPsample(i+1,j) = lognrnd(log(dlim(i)),bUthd,1);
                while EDPsample(i+1,j)<EDPsample(i,j)
                    EDPsample(i+1,j) = lognrnd(log(dlim(i)),bUthd,1);
                end
                [mc,a,ac,r,mf] = get_spo2ida_parameters(SPO(blg,:), T(blg), Gamma(blg));
                [SaT50,bTSa]=DFfragility(dry,EDPsample(i+1,j),0.,mc,r,du,T(blg),Gamma(blg),EDPvec,RDvec,Tc,Td,g,MC);
                Sa_av = log(SaT50)*Sa_ratios(blg);bSa_av=bTSa*Sa_ratios(blg);
                Sa50(j) = exp(Sa_av);
                bSa(j) = bSa_av;
            end
        end
        SaT{i} = Sa50;
        b{i} = bSa;
        clear Sa50 bSa
    end
    for samp=1:MC
       LR(samp,:) = damage_to_loss( SaT, b, samp, iml  );
    end
    LR50s(blg,:) = mean(LR); % Define Vulnerability curve for each building
    bLRs(blg,:) = std(LR);
end

% Combine the Loss Ratios of each building in a single LR for each iml, 
% with mean = mean(LRs) and std = std(LRs)

% weighted mean
for blg=1:noBlg
    LR50s(blg,:) = LR50s(blg,:)*w(blg);
end
LR50 = sum(LR50s);
% weighted st dev
for blg = 1:noBlg
    bLRs2(blg,:) = ((LR50s(blg,:)-LR50).^2+bLRs(blg,:).^2)*w(blg);
end

bLR = sum(bLRs2).^0.5;

%% RECORDER
xlswrite(horzcat('./results/vulnerability_process_matlab.xls'), [iml' LR50' bLR'])
